#!/usr/bin/env bash

# this is used to emulate a clipboard on machines where xsel and/or
# pbcopy/pbpaste aren't present (eg a headless linux box with no X servre)
PBPROXY_TEMPFILE="/tmp/pboard"

main() {
    case "$1" in
    --help | -h)
        show-usage
        return 0
        ;;
    esac

    local remote_host="$1"

    if [[ "$CUR_PLATFORM" == "Darwin" ]]; then
        # run the system pbcopy/pbpaste
        exec "/usr/bin/$SCRIPT_NAME"
    elif [[ "$CUR_PLATFORM" == "Linux" ]]; then
        # Use xsel on linux
        if quiet which xsel && quiet timeout 1 xsel --clipboard --output; then
            case "$SCRIPT_NAME" in
            pbcopy | *copy*)
                cat | exec xsel --clipboard --input
                ;;
            pbpaste | *paste*)
                exec xsel --clipboard --output
                ;;
            esac
        else
            # Fall back to storing clipboard contents in a tempfile if xsel is
            # not available
            case "$SCRIPT_NAME" in
            pbcopy | *copy*)
                exec cat >"$PBPROXY_TEMPFILE"
                ;;
            pbpaste | *paste*)
                [[ -f "$PBPROXY_TEMPFILE" ]] && exec cat "$PBPROXY_TEMPFILE"
                ;;
            esac

        fi
    fi

}

show-usage() {
    cat <<EOF

$(basename "$0")

pbcopy/pbpaste and xsel wrapper with remote session support.

You can use this to copy and paste to/from another machine's clipboard over
ssh. <hostname> below can be any hostname your machine can reach via ssh
(including host aliases set in ~/.ssh/config)

Usage:

Copy to another machine's clipboard:

echo hi | pbcopy <hostname>

EOF
    return 0
}

quiet() {
    "$@" &>/dev/null
}

abspath() {
    local dir=
    local file=
    if quiet pushd "$1"; then
        pwd
        quiet popd
    else
        dir="$(dirname "$1")"
        file="$(basename "$1")"
        quiet pushd "$dir"
        echo "$PWD/$file"
        quiet popd
    fi
}

SCRIPT_NAME="$(basename "$0")"
CUR_PLATFORM="$(uname)"

main "$@"
